server {
    listen 80;
    server_name localhost;

    # Proxy this path to the vouch instance.
    # See: https://github.com/vouch/vouch-proxy?tab=readme-ov-file#vouch-proxy-in-a-path
    location /vouch {
        proxy_pass http://vouch:9090;  # must not! have a slash at the end
        proxy_set_header Host $http_host;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";

        # Used by rundeck to identify the user and their roles.
        auth_request_set $auth_resp_x_vouch_user $upstream_http_x_vouch_user;
        auth_request_set $auth_resp_x_vouch_idp_claims_roles $upstream_http_x_vouch_idp_claims_roles;

        # Used by rundeck to fill out user-profile information.
        auth_request_set $auth_resp_x_vouch_idp_claims_email $upstream_http_x_vouch_idp_claims_email;
        auth_request_set $auth_resp_x_vouch_idp_claims_family_name $upstream_http_x_vouch_idp_claims_family_name;
        auth_request_set $auth_resp_x_vouch_idp_claims_given_name $upstream_http_x_vouch_idp_claims_given_name;

        # These return values are used by the @error401 call.
        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
    }

    location /user/login {
        # Assign the headers identifying the user from the vouch response to the request.
        proxy_pass http://rundeck:4440;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    location / {
        # Send all requests to the `/validate` endpoint for authorization.
        auth_request /vouch/validate;

        # NGinx requires us to set these values to pass through the token headers.
        # See: https://github.com/vouch/vouch-proxy/issues/26#issuecomment-425215810
        auth_request_set $auth_resp_x_vouch_user $upstream_http_x_vouch_user;
        auth_request_set $auth_resp_x_vouch_idp_claims_roles $upstream_http_x_vouch_idp_claims_roles;

        auth_request_set $auth_resp_x_vouch_idp_claims_email $upstream_http_x_vouch_idp_claims_email;
        auth_request_set $auth_resp_x_vouch_idp_claims_family_name $upstream_http_x_vouch_idp_claims_family_name;
        auth_request_set $auth_resp_x_vouch_idp_claims_given_name $upstream_http_x_vouch_idp_claims_given_name;

        # Assign the headers identifying the user from the vouch response to the request.
        proxy_set_header X-Vouch-User $auth_resp_x_vouch_user;
        proxy_set_header X-Vouch-IdP-Claims-Roles $auth_resp_x_vouch_idp_claims_roles;

        proxy_set_header X-Vouch-IdP-Claims-Email $auth_resp_x_vouch_idp_claims_email;
        proxy_set_header X-Vouch-IdP-Claims-Family-Name $auth_resp_x_vouch_idp_claims_family_name;
        proxy_set_header X-Vouch-IdP-Claims-Given-Name $auth_resp_x_vouch_idp_claims_given_name;

        # Add some helpful headers on the originator before proxying.
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://rundeck:4440/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    error_page 401 = @error401;

    # If the user is not logged in, redirect them to Vouch's login URL
    location @error401 {
        return 302 http://$http_host/vouch/login?url=http://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err;
    }
}
